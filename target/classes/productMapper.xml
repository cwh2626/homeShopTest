<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.com.shop.dao.ProductMapper">
<!-- 디비로 넘길때 null값을 넘기려면 에러가 뜬다 그래서 원래는 동적sql이라고 하여 if절로 null일 경우는 아에안넣는 식으로 하지만 최근에는 jdbcType을 변경해줌으로서 null도 넘길 수 있다
	여러가지 타입이 있으니 인터넷으로 봐두-->  
<insert id="insertSaleWrite" parameterType="Product">
	insert into Product_TB values (Product_seq.nextval , #{email} , #{category} , #{productName} 
									, #{productPrice}, #{productFirstPhotoName}, #{productSubPhoto1Name
									, jdbcType=VARCHAR},#{productSubPhoto2Name, jdbcType=VARCHAR}
									, #{productSubPhoto3Name, jdbcType=VARCHAR}, #{productSubPhoto4Name
									, jdbcType=VARCHAR},#{productDescription},#{deliveryMethod},#{salesMethod})
</insert>

<insert id="orderWrite" parameterType="Orders" >
	insert into Orders(orderSeq, buyerEmail,  productSeq, recipientName, recipientPhonenum
						,recipientAddress, recipientPostalCode, buyerName, buyerPhonenum, buyerAddress
						,buyerPostalCode, recipientMemo, totalPrice) 
								values( Orders_seq.nextval, #{buyerEmail}, #{productSeq}, #{recipientName}
								,#{recipientPhonenum}, #{recipientAddress}, #{recipientPostalCode}, #{buyerName}
								,#{buyerPhonenum}, #{buyerAddress}, #{buyerPostalCode}, #{recipientMemo}, #{totalPrice})

</insert>

<insert id="insertItmeWrite" parameterType="Lineitem">
	insert into Lineitem values(lineitem_seq.nextval, #{orderSeq}, #{quantity}, #{unitprice}, #{itemNum})
</insert>

<insert id="insertSaleProductOption" parameterType="map">
	insert into ProductOption(productOptionSeq, productSeq
				<if test="optionName != null">
							,optionName
				</if>
				<if test="additionalAmount != null">
							,additionalAmount
				</if>
							,selectNum)
					 values (productOption_seq.nextval, #{productSeq}
				 <if test="optionName != null">
							,#{optionName}
				</if>
				<if test="additionalAmount != null">
							,#{additionalAmount}
				</if>
							 ,#{selectNum})
</insert>

<select id="getTotal" parameterType="String" resultType="Int">
	 select count(*) from Product_TB
</select>

<select id="getProductList" parameterType="String" resultType="Product">
	select * from Product_TB
</select>

<select id="selectSaleinpo" parameterType="Product" resultType="Product">
	select * from Product_TB where email like #{email} and productFirstPhotoName like #{productFirstPhotoName}
</select>

<select id="getProductinpo" parameterType="Product" resultType="Product">
	select * from Product_TB where email like #{email} and productSeq = #{productSeq}
</select>

<select id="getSeqProductInfo" parameterType="Int" resultType="Product">
	select * from Product_TB where productSeq = #{productSeq}
</select>

<select id="getPrductOptioninpo" parameterType="Int" resultType="ProductOption">
	select * from ProductOption where productSeq = #{productSeq} ORDER BY selectNum ASC
</select>

<select id="getSelProductOption" parameterType="Int" resultType="ProductOption">
	select * from ProductOption where productSeq = #{param1} AND selectNum = #{param2}
</select>

<select id="getRecentOrder" parameterType="Orders" resultType="Orders">
	select * from Orders where orderSeq = (select MAX(orderSeq) from Orders where productSeq = #{productSeq} AND buyerEmail = #{buyerEmail})
</select>


</mapper>

